"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _lodash = _interopRequireDefault(require("lodash"));

var _appiumSupport = require("appium-support");

var _logger = _interopRequireDefault(require("../logger"));

var _appiumBaseDriver = require("appium-base-driver");

var _appiumIosDevice = require("appium-ios-device");

const commands = {};

function requireOptions(opts = {}, reqKeys = []) {
  for (const key of reqKeys) {
    if (!_lodash.default.isString(opts[key]) || _lodash.default.isEmpty(opts[key])) {
      throw new _appiumBaseDriver.errors.InvalidArgumentError(`'${key}' is expected to be a valid string. '${opts[key]}' is given instead`);
    }
  }

  return opts;
}

commands.mobileInstallApp = async function mobileInstallApp(opts = {}) {
  const {
    app,
    timeoutMs,
    strategy
  } = requireOptions(opts, ['app']);
  const srcAppPath = await this.helpers.configureApp(app, '.app');

  _logger.default.info(`Installing '${srcAppPath}' to the ${this.isRealDevice() ? 'real device' : 'Simulator'} ` + `with UDID '${this.opts.device.udid}'`);

  if (!(await _appiumSupport.fs.exists(srcAppPath))) {
    _logger.default.errorAndThrow(`The application at '${srcAppPath}' does not exist or is not accessible`);
  }

  await this.opts.device.installApp(srcAppPath, timeoutMs !== null && timeoutMs !== void 0 ? timeoutMs : this.opts.appPushTimeout, strategy !== null && strategy !== void 0 ? strategy : this.opts.appInstallStrategy);

  _logger.default.info(`Installation of '${srcAppPath}' succeeded`);
};

commands.mobileIsAppInstalled = async function mobileIsAppInstalled(opts = {}) {
  const {
    bundleId
  } = requireOptions(opts, ['bundleId']);
  const installed = await this.opts.device.isAppInstalled(bundleId);

  _logger.default.info(`App '${bundleId}' is${installed ? '' : ' not'} installed`);

  return installed;
};

commands.mobileRemoveApp = async function mobileRemoveApp(opts = {}) {
  const {
    bundleId
  } = requireOptions(opts, ['bundleId']);

  _logger.default.info(`Uninstalling the application with bundle identifier '${bundleId}' ` + `from the ${this.isRealDevice() ? 'real device' : 'Simulator'} with UDID '${this.opts.device.udid}'`);

  try {
    await this.opts.device.removeApp(bundleId);

    _logger.default.info(`Removal of '${bundleId}' succeeded`);

    return true;
  } catch (err) {
    _logger.default.warn(`Cannot remove '${bundleId}'. Original error: ${err.message}`);

    return false;
  }
};

commands.mobileLaunchApp = async function mobileLaunchApp(opts = {}) {
  const launchOptions = requireOptions(opts, ['bundleId']);

  if (opts.arguments) {
    launchOptions.arguments = _lodash.default.isArray(opts.arguments) ? opts.arguments : [opts.arguments];
  }

  if (opts.environment) {
    launchOptions.environment = opts.environment;
  }

  return await this.proxyCommand('/wda/apps/launch', 'POST', launchOptions);
};

commands.mobileTerminateApp = async function mobileTerminateApp(opts = {}) {
  return await this.proxyCommand('/wda/apps/terminate', 'POST', requireOptions(opts, ['bundleId']));
};

commands.mobileActivateApp = async function mobileActivateApp(opts = {}) {
  return await this.proxyCommand('/wda/apps/activate', 'POST', requireOptions(opts, ['bundleId']));
};

commands.mobileQueryAppState = async function mobileQueryAppState(opts = {}) {
  return await this.proxyCommand('/wda/apps/state', 'POST', requireOptions(opts, ['bundleId']));
};

commands.installApp = async function installApp(appPath) {
  await this.mobileInstallApp({
    app: appPath
  });
};

commands.activateApp = async function activateApp(bundleId, opts = {}) {
  return await this.mobileLaunchApp(Object.assign({}, opts, {
    bundleId
  }));
};

commands.isAppInstalled = async function isAppInstalled(bundleId) {
  return await this.mobileIsAppInstalled({
    bundleId
  });
};

commands.terminateApp = async function terminateApp(bundleId) {
  return await this.mobileTerminateApp({
    bundleId
  });
};

commands.queryAppState = async function queryAppState(bundleId) {
  return await this.mobileQueryAppState({
    bundleId
  });
};

commands.mobileListApps = async function mobileListApps(opts = {}) {
  if (!this.isRealDevice()) {
    throw new _appiumBaseDriver.errors.NotImplementedError(`This extension is only supported on real devices`);
  }

  const {
    applicationType = 'User'
  } = opts;
  const service = await _appiumIosDevice.services.startInstallationProxyService(this.opts.device.udid);

  try {
    return await service.listApplications({
      applicationType
    });
  } finally {
    service.close();
  }
};

var _default = commands;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,
